# Set the base image to Ubuntu
FROM ubuntu:16.04

# Arguments and versions
ARG PHP_VERSION=7.0

# Environment Variables
ENV DEBIAN_FRONTEND noninteractive
ENV LOCALE en_US.UTF-8
ENV PHP_VERSION ${PHP_VERSION}

# Base Packages
RUN apt-get update -y


#RUN apt-get install -y net-tools iputils-ping iproute2 sysstat iotop tcpdump tcpick bwm-ng tree strace screen inotify-tools socat 
# software-properties-common  emacs python-minimal fontconfig ssmtp mailutils bash-completion less unzip automake make

# Basic packages
RUN apt-get install -y locales git wget curl vim debconf-utils sudo build-essential autoconf libpcre3-dev rsync \
        software-properties-common python-software-properties

# Set locale
RUN locale-gen $LOCALE && update-locale LANG=$LOCALE

# Supervisor
RUN apt-get install -y supervisor
RUN mkdir -p /var/log/supervisor


# SSH
RUN apt-get install -y openssh-server
ADD configs/ssh/supervisor.conf /etc/supervisor/conf.d/ssh.conf
RUN mkdir -p /var/run/sshd

# Apache
RUN apt-get install -y apache2 apache2-utils libapache2-mod-geoip geoip-database
ADD configs/apache2/apache2-service.sh /apache2-service.sh
ADD configs/apache2/apache2-setup.sh /apache2-setup.sh
RUN chmod +x /*.sh
ADD configs/apache2/apache_default /etc/apache2/sites-available/000-default.conf
ADD configs/apache2/supervisor.conf /etc/supervisor/conf.d/apache2.conf
RUN /apache2-setup.sh

# PHP and PHP packages that are important to running dynamic PHP based applications with Apache2 Webserver support 
RUN sudo add-apt-repository ppa:ondrej/php
RUN sudo apt-get update
RUN apt-get install -y \
    php$PHP_VERSION \
    libapache2-mod-php$PHP_VERSION \
    php$PHP_VERSION-bcmath \
    php$PHP_VERSION-cli \
    php$PHP_VERSION-common \
    php$PHP_VERSION-curl \
    php$PHP_VERSION-dev \
    php$PHP_VERSION-enchant \
    php$PHP_VERSION-gd \
    php$PHP_VERSION-gmp \
    php$PHP_VERSION-imap \
    php$PHP_VERSION-interbase \
    php$PHP_VERSION-intl \
    php$PHP_VERSION-json \
    php$PHP_VERSION-ldap \
    php$PHP_VERSION-mbstring \
    php$PHP_VERSION-memcache \
    php$PHP_VERSION-mysql \
    php$PHP_VERSION-mcrypt \
    php$PHP_VERSION-opcache \
    php-pear \
    php$PHP_VERSION-pspell \
    php$PHP_VERSION-readline \
    php$PHP_VERSION-recode \
    php$PHP_VERSION-soap \
    php$PHP_VERSION-tidy \
    php$PHP_VERSION-xdebug \
    php$PHP_VERSION-xml \
    php$PHP_VERSION-xmlrpc \
    php$PHP_VERSION-zip

ADD configs/php/php.ini /etc/php/$PHP_VERSION/apache2/php.ini

# Setup XDebug.
RUN echo "xdebug.max_nesting_level = 300" >> /etc/php/$PHP_VERSION/apache2/conf.d/20-xdebug.ini
RUN echo "xdebug.max_nesting_level = 300" >> /etc/php/$PHP_VERSION/cli/conf.d/20-xdebug.ini


# MySQL
RUN apt-get install -y mysql-server mysql-client 
ADD configs/mysql/mysql-setup.sh /mysql-setup.sh
RUN chmod +x /*.sh
ADD configs/mysql/my.cnf /etc/mysql/my.cnf
ADD configs/mysql/supervisor.conf /etc/supervisor/conf.d/mysql.conf
RUN mkdir -p /var/run/mysqld && \
    chown -R mysql: /var/run/mysqld
RUN /mysql-setup.sh

# PHPMyAdmin
RUN (echo 'phpmyadmin phpmyadmin/dbconfig-install boolean true' | debconf-set-selections)
RUN (echo 'phpmyadmin phpmyadmin/app-password password root' | debconf-set-selections)
RUN (echo 'phpmyadmin phpmyadmin/app-password-confirm password root' | debconf-set-selections)
RUN (echo 'phpmyadmin phpmyadmin/mysql/admin-pass password root' | debconf-set-selections)
RUN (echo 'phpmyadmin phpmyadmin/mysql/app-pass password root' | debconf-set-selections)
RUN (echo 'phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2' | debconf-set-selections)
RUN apt-get install phpmyadmin -y
ADD configs/phpmyadmin/config.inc.php /etc/phpmyadmin/conf.d/config.inc.php
RUN chmod 755 /etc/phpmyadmin/conf.d/config.inc.php
ADD configs/phpmyadmin/phpmyadmin-setup.sh /phpmyadmin-setup.sh
RUN chmod +x /phpmyadmin-setup.sh
RUN /phpmyadmin-setup.sh




# *******************************************************
# DRUPAL 
# *******************************************************

ARG DRUSH_VERSION=8.1.10
ARG DRUPAL_VERSION=8.3.6
ARG NODE_VERSION=6.10.0
ARG DRUPAL_ROOT=/var/www/html/web

ENV DRUSH_VERSION ${DRUSH_VERSION}
ENV DRUPAL_VERSION ${DRUPAL_VERSION}
ENV NODE_VERSION ${NODE_VERSION}
ENV DRUPAL_ROOT ${DRUPAL_ROOT}

# Install uploadprogress php extension from a php-7-supported src
RUN /bin/bash -c 'cd /tmp/ && \
      git clone https://github.com/Jan-E/uploadprogress.git && \
      cd uploadprogress && \
      phpize && \
      ./configure && make && make install && \
      echo "extension=uploadprogress.so" > /etc/php/7.0/mods-available/uploadprogress.ini && \
      phpenmod uploadprogress'

# Installing nodejs from binaries
RUN cd /tmp && \
  curl -sL "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" -o node-linux-x64.tar.gz && \
  tar -zxf "node-linux-x64.tar.gz" -C /usr/local --strip-components=1 && \
  rm node-linux-x64.tar.gz && \
  ln -s /usr/local/bin/node /usr/local/bin/nodejs

# Install bower and gulp-cli globally
RUN npm install --global bower gulp-cli

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Update PATH variable to include Composer binaries.
ENV PATH "/root/.composer/vendor/bin:$PATH"

## Install Drush.
RUN composer global require drush/drush:$DRUSH_VERSION
RUN composer global update
# binding
RUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush

# Install Drupal Console.
RUN curl https://drupalconsole.com/installer -L -o drupal.phar && \
	mv drupal.phar /usr/local/bin/drupal && \
	chmod +x /usr/local/bin/drupal
RUN drupal init


# Setup MySQL, bind on all addresses.
RUN sed -i -e 's/^bind-address\s*=\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf
RUN /usr/bin/mysqld_safe > /dev/null 2>&1 & 
RUN mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO drupal@localhost IDENTIFIED BY 'drupal'"

# Install Drupal.
RUN rm -rf /var/www
RUN cd /var && \
	drush dl drupal-$DRUPAL_VERSION && \
	mv /var/drupal* /var/www
RUN mkdir -p /var/www/sites/default/files && \
	chmod a+w /var/www/sites/default -R && \
	mkdir /var/www/sites/all/modules/contrib -p && \
	mkdir /var/www/sites/all/modules/custom && \
	mkdir /var/www/sites/all/themes/contrib -p && \
	mkdir /var/www/sites/all/themes/custom && \
	cp /var/www/sites/default/default.settings.php /var/www/sites/default/settings.php && \
	cp /var/www/sites/default/default.services.yml /var/www/sites/default/services.yml && \
	chmod 0664 /var/www/sites/default/settings.php && \
	chmod 0664 /var/www/sites/default/services.yml && \
	chown -R www-data:www-data /var/www/

RUN cd /var/www && \
	drush si -y standard --db-url=mysql://drupal:drupal@localhost/drupal --account-pass=admin && \
	drush dl admin_menu devel && \
	# In order to enable Simpletest, we need to download PHPUnit.
	composer install --dev && \
	# Admin Menu is broken. See https://www.drupal.org/node/2563867 for more info.
	# As long as it is not fixed, only enable simpletest and devel.
	# drush en -y admin_menu simpletest devel
	drush en -y simpletest devel && \
	drush en -y bartik
RUN cd /var/www && \
	drush cset system.theme default 'bartik' -y
# Allow Kernel and Browser tests to be run via PHPUnit.	
RUN sed -i 's/name="SIMPLETEST_DB" value=""/name="SIMPLETEST_DB" value="sqlite:\/\/localhost\/tmp\/db.sqlite"/' /var/www/core/phpunit.xml.dist




# Start
VOLUME ["/var/www/html","/var/log/apache2","/var/log/supervisor","/var/log/mysql","/var/lib/mysql"]
EXPOSE 22 80 3306

CMD ["supervisord", "-n"]
