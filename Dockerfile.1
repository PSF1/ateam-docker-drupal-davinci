# Set the base image to Ubuntu
FROM ubuntu:16.04

# Set the enviroment 
ENV DEBIAN_FRONTEND noninteractive
ENV LOCALE en_US.UTF-8

# Install required packages
RUN apt-get clean all
# RUN apt-get -y install supervisor 
RUN apt-get update && \
    # base depends
    apt-get install -y \
    locales net-tools iputils-ping iproute2 sysstat iotop tcpdump tcpick bwm-ng tree strace screen rsync inotify-tools socat wget curl \
    openssh-server openssh-client build-essential automake make autoconf libpcre3-dev software-properties-common sudo git vim emacs \
    python-minimal fontconfig ssmtp mailutils bash-completion less unzip \
    # stack services depends
    supervisor apache2 apache2-utils mysql-client mysql-server libapache2-mod-php libapache2-mod-geoip geoip-database \
    # php depends
    php \
    php-bcmath \
    php-cli \
    php-curl \
    php-dba \
    php-dev \
    php-enchant \
    php-gd \
    php-gd \
    php-gmp \
    php-imap \
    php-interbase \
    php-intl \
    php-json \
    php-ldap \
    php-mbstring \
    php-memcache \
    php-mysql \
    php-odbc \
    php-opcache \
    php-pear \
    php-pgsql \
    php-pspell \
    php-pspell \
    php-readline \
    php-recode \
    #php-snmp \
    php-soap \
    php-sqlite3 \
    php-tidy \
    php-xdebug \
    php-xml \
    php-xmlrpc \
    php-zip

# Set locale
RUN locale-gen $LOCALE && update-locale LANG=$LOCALE



## Install Composer
RUN curl -k -sS https://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer && \
    chmod +x /usr/local/bin/composer

# Add shell scripts for starting apache2
ADD assets/apache2-start.sh /apache2-start.sh

# Add shell scripts for starting mysql
ADD assets/mysql-start.sh /mysql-start.sh
ADD assets/run.sh /run.sh

# Give the execution permissions
RUN chmod 755 /*.sh

# Add the Configurations files
ADD assets/my.cnf /etc/mysql/conf.d/my.cnf
ADD assets/supervisord-lamp.conf /etc/supervisor/conf.d/supervisord-lamp.conf


# Remove pre-installed database
RUN rm -rf /var/lib/mysql/*

# Enviroment variable for setting the Username and Password of MySQL
ENV MYSQL_USER root
ENV MYSQL_PASS root

# DRUPAL Database name
ENV DRUPAL_DBNAME drupal

# Add MySQL utils
ADD assets/create_database.sh /create_database.sh
ADD assets/mysql_user.sh /mysql_user.sh
RUN chmod 755 /*.sh

# Enable apache mods.
RUN a2enmod php5
RUN a2enmod rewrite

# Setup ssh
RUN mkdir -p /var/run/sshd


# Add volumes for MySQL and MySQL 
VOLUME ["/var/log/apache2","/var/log/supervisor","/var/log/mysql","/var/lib/mysql", "/etc/mysql"]


# DRUPAL

ARG DRUSH_VERSION=8.1.10
ARG DRUPAL_VERSION=8
ARG DRUPAL_ROOT=/var/www/html/web

ENV DRUSH_VERSION ${DRUSH_VERSION}
ENV DRUPAL_VERSION ${DRUPAL_VERSION}
ENV DRUPAL_ROOT ${DRUPAL_ROOT}

# Install uploadprogress php extension from a php-7-supported src
RUN /bin/bash -c 'cd /tmp/ && \
      git clone https://github.com/Jan-E/uploadprogress.git && \
      cd uploadprogress && \
      phpize && \
      ./configure && make && make install && \
      echo "extension=uploadprogress.so" > /etc/php/7.0/mods-available/uploadprogress.ini && \
      phpenmod uploadprogress'

# Install Drush.
RUN composer global require drush/drush:$DRUSH_VERSION && \
    mv $HOME/.composer /usr/local/share/composer && \
    ln -s /usr/local/share/composer/vendor/drush/drush/drush /usr/local/bin/drush

## Install drupal console
RUN curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal && \
    chmod +x /usr/local/bin/drupal

## make composer to cache a drupal-$DRUPAL_VERSION in user cache
ADD assets/var/www/html/composer.json-drupal-project.tpl /assets/var/www/html/composer.json-drupal-project.tpl
RUN /bin/bash --login -c '\
      cp -a /assets/var/www/html/composer.json-drupal-project.tpl /tmp/composer.json; \
      # this is a workaround since 'composer --repository is not working :(
      sed -i "s|_DRUPAL_VERSION_|$DRUPAL_VERSION|g" /tmp/composer.json; \
      cd /tmp; yes | composer create-project drupal-composer/drupal-project:~$DRUPAL_VERSION --stability dev; \
      rm -rf /tmp/drupal-project /tmp/composer.json'

## Install Drupal dependencies with composer
ADD assets/var/www/html /assets/var/www/html
RUN /bin/bash -c 'if [ -e /assets/var/www/html/composer.json ]; then \
                    mv /var/www/html /var/www/html.dist; \
                    ln -s /assets/var/www/html /var/www/html; \
                    mv /etc/php/7.0/cli/conf.d/20-xdebug.ini /tmp/; \
                    composer install; \
                    mv /tmp/20-xdebug.ini /etc/php/7.0/cli/conf.d/20-xdebug.ini; \
                    chown -R www-data: /var/www/html/; \
                    rm -f /var/www/html; mkdir /var/www/html; \
                  else \
                    exit 0; \
                  fi'



# Set the port
EXPOSE 80 443 22 3306

# Execut the run.sh 
CMD ["/run.sh"]